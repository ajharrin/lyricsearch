{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,oVAAoV,mBAAmB,mBAAmB,OAAO,O;;;;;;;;;;;ACAjY,+DAA+D,+H;;;;;;;;;;;;;;;;;;ACArB;AACC;AAS3C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAKvB,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAJ7C,aAAQ,GAAS,EAAE;QACnB,UAAK,GAAG,EAAE,CAAC;IAGoC,CAAC;IAElD,SAAS;QACP,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC;QACvC,IAAI,MAAM,GAAqB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACnG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QACL,OAAO,IAAI,CAAC,KAAK,CAAC;IAClB,CAAC;CACF;;YAVmC,yDAAW;;AALlC,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uIAAmC;;KAEpC,CAAC;GACW,YAAY,CAexB;AAfwB;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACa;AACT;AAEF;AAEI;AAQ/C,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IANrB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,2DAAY,CAAC;QAC5B,OAAO,EAAE,CAAC,uEAAa,EAAE,qEAAgB,EAAE,0DAAW,CAAC;QACvD,SAAS,EAAE,CAAC,yDAAW,CAAC;QACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;ACfqB;AACO;AAMlD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEtB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAAI,CAAC;IAEhD,QAAQ,CAAC,MAAc,EAAE,KAAY;QACnC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,6BAA6B,MAAM,IAAI,KAAK,EAAE,CAAC,CAAC;IAC9E,CAAC;CAKF;;YATkC,+DAAU;;AAFhC,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAWvB;AAXuB;;;;;;;;;;;;;ACPxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<form (submit)=\\\"getLyrics()\\\">\\n<label for=\\\"\\\">Artist</label><br>\\n<input type=\\\"text\\\" name=\\\"SongInfo.artist\\\" [(ngModel)]=\\\"SongInfo.artist\\\"><br>\\n<label for=\\\"\\\">Search New Title</label><br>\\n<input type=\\\"text\\\" name=\\\"SongInfo.title\\\" [(ngModel)]=\\\"SongInfo.title\\\"><br>\\n<input type=\\\"submit\\\">\\n</form>\\n<!-- {{ SongInfo | json }} -->\\n<hr>\\n<pre>{{lyric}}</pre>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport {HttpService} from './http.service';\nimport { JsonpClientBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  SongInfo : any = {}\n  lyric = \"\";\n\n\n  constructor(private _httpService: HttpService){}\n\ngetLyrics() {\n  console.log(\"getLyrics method running\")\n  let singer : Observable<any> = this._httpService.getLyric(this.SongInfo.artist, this.SongInfo.title);\n    singer.subscribe(data => {\n      this.lyric = data[\"lyrics\"];\n    });\n  return this.lyric;\n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport {HttpService} from './http.service';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, FormsModule],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _httpClient: HttpClient) { }\n\n  getLyric(artist: string, title:string): Observable<any>{\n    return this._httpClient.get(`https://api.lyrics.ovh/v1/${artist}/${title}`);\n  }\n\n  // findLyric(artist: string, title: string) : Observable<any>{\n  //   return this._httpClient.post(`https://api.lyrics.ovh/v1/${artist}/${title}`, title);\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}